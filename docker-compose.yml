version: '3.8'
services:
  postgres:
    image: pgvector/pgvector:pg17
    environment:
      POSTGRES_DB: docs_mcp
      POSTGRES_USER: mcp_user
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U mcp_user -d docs_mcp"]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - "5432:5432"

  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL:-admin@example.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD:-admin}
      PGADMIN_SERVER_JSON_FILE: /tmp/servers.json
    ports:
      - "5050:80"
    depends_on:
      - postgres
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    configs:
      - source: pgadmin_servers
        target: /tmp/servers.json

  docs-mcp-server:
    build: .
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - POSTGRES_CONNECTION=postgresql://mcp_user:${POSTGRES_PASSWORD}@postgres:5432/docs_mcp
    depends_on:
      postgres:
        condition: service_healthy

configs:
  pgadmin_servers:
    content: |
      {
        "Servers": {
          "1": {
            "Name": "docs-mcp",
            "Group": "Servers",
            "Host": "postgres",
            "Port": 5432,
            "MaintenanceDB": "docs_mcp",
            "Username": "mcp_user",
            "Password": "${POSTGRES_PASSWORD}",
            "SSLMode": "prefer"
          }
        }
      }

volumes:
  postgres_data:
  pgadmin_data:
